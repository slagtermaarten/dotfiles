unbind C-b
bind C-a send-prefix
unbind r
# bind r source-file ~/.tmux.conf
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."
bind K confirm kill-server
bind q confirm kill-window
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind b break-pane
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
bind-key l last-window
bind-key I choose-window "join-pane -h -s "%%""
# Merge chosen window into currently selected pane
bind-key C-I choose-window "join-pane -v -s "%%""
bind c new-window -c "#{pane_current_path}"
bind C new-window
bind D new-window -c "/Users/maartenslagter/dotfiles/"

# linux copy pasting
# bind y run-shell "tmux show-buffer | xclip -sel clip -i" \; display-message "Copied tmux buffer to system clipboard"
# bind C-p run-shell "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# # mac copy pasting
# bind p run "tmux set-buffer \"$(pbcopy)\"; tmux paste-buffer" \; display-message "Copied tmux buffer to system clipboard"
# bind C-y run "tmux save-buffer - | pbcopy "

set -g default-command "reattach-to-user-namespace -l /usr/bin/zsh"

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# bind-key S command-prompt -p ssh: "new-window -n %1 'ssh %1'"
bind-key P new-window -n paranoid 'ssh m.slagter@paranoid'
bind-key S new-window -n steroid 'ssh m.slagter@steroid'
unbind ^A
bind ^A select-pane -t :.+

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# C-a a should send ctrl-a to the underlying shell (move to start of line)
bind-key a send-prefix
# C-a C-a
bind-key C-a last-window
set-window-option -g automatic-rename on

set -g default-terminal "screen-256color"
# set-option -g status-utf8 on
set -g base-index 1
# set-option -g default-path $HOME
set -s escape-time 0
set-option -g mouse on
# set mouse on
# set -g mode-mouse on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on
set -g prefix C-a
setw -g mode-keys vi
set-option -g default-shell "/bin/zsh"
set-option -g default-command "/bin/zsh -i"
set-window-option -g xterm-keys on
setw -g monitor-activity on
set -g visual-activity on

# needed as on tmux 1.9 and up (defaults to off)
# added in tmux commit c7a121cfc0137c907b7bfb
# set -g focus-events on

# but don't change tmux's own window titles
set -w -g automatic-rename on

# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
# (would love to include #(pwd) here as well, but that would only print the
# current working directory relative to the session -- ie. always the starting
# cwd -- which is not very interesting)
set -g set-titles on
set -g set-titles-string "#S"
# set -g set-titles-string "#T : #h > #S > #W"

set -g status-bg cyan
set -g status-fg black
set -g status-left-length 50
set -w -g window-status-current-fg red
set -w -g window-status-current-bg cyan
# set -g status-left ' #[fg=cyan,bright]#10H#[fg=green]:#[fg=white]#S#[fg=green] | #[default]'
# set -g status-right '| #[fg=yellow]%y-%m-%d %H:%M '
# set -g status-left ' #10H : #S | '
# set -g status-right '| %y-%m-%d %H:%M '
set -g status-left ' #[bright] #10H'
set -g status-right ''
set -g status-justify centre

#  List of plugins
set -g @plugin 'nhdaly/tmux-scroll-copy-mode'

# Initialize TMUX plugin manager (keep this line at the very bottom of
# tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
